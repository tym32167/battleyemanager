@using BattlEyeManager.BE.Models
@model IEnumerable<BattlEyeManager.BE.Models.ChatMessage>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@functions
{

public string GetClass(ChatMessage message)
{
    switch (message.Type)
    {
        case ChatMessage.MessageType.Vehicle:
        case ChatMessage.MessageType.Command:
            return "table-warning";


        case ChatMessage.MessageType.Group:
            return "table-success";

        case ChatMessage.MessageType.Side:
            return "table-info";


        case ChatMessage.MessageType.Direct:
            return "table-active";

        case ChatMessage.MessageType.RCon:
            return "table-danger";

        case ChatMessage.MessageType.Global:

        default:
            return string.Empty;
    }
}

}



<h2>Chat</h2>

<table class="table-sm">
    <tr>
        <td>
            <a asp-controller="OnlinePlayer" asp-action="Index" asp-route-serverId="@Context.Request.Query["serverId"]">Players</a>
        </td>
        <td>
            Chat
        </td>
    </tr>
</table>



<div id="chatBox" class="my-3 p-3 bg-white rounded box-shadow" style="line-height: 1em; max-height: 500px; overflow: auto;">

    @foreach (var item in Model)
    {
        <div class="media text-muted @GetClass(item)">
            <p class="media-body mb-0 small lh-125 ">
                <strong>@Html.DisplayFor(modelItem => item.Date)</strong>
                @Html.DisplayFor(modelItem => item.Message)
            </p>
        </div>
    }

</div>


<form asp-action="Post" class="form-inline" asp-route-serverId="@Context.Request.Query["serverId"]">

    <input type="text" class="form-control col-sm" id="chatMessage" name="chatMessage" placeholder="Chat message">
    <input type="submit" class="btn btn-primary" value="Send" />


</form>







@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}


    <script type="text/javascript">

        $(function () {
            var wtf = $('#chatBox');
            var height = wtf[0].scrollHeight;
            wtf.scrollTop(height);
        });

    </script>

    <script type="text/javascript" src="lib/signalr/signalr.js"></script>

    <script type="text/javascript">

        $(function () {


            var connection = new signalR.HubConnection('/fallback');

            connection.on('send', (serverId, message) => {
                console.log(serverId);
                console.log(message);

                window.location = window.location;
            });

            connection.start();
        });

    </script>
}


